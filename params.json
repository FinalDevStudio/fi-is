{
  "name": "Fi-is",
  "tagline": "Micro check library for Node.js and the browser",
  "body": "fi-is [![Build Status](https://travis-ci.org/FinalDevStudio/fi-is.svg?branch=master)](https://travis-ci.org/FinalDevStudio/fi-is)\r\n=====\r\n\r\n####A general purpose check library.\r\nForked from [arasatasaygin/is.js](https://github.com/arasatasaygin/is.js).\r\n- No dependencies\r\n- AMD, Node & browser ready\r\n\r\n####Usage:\r\nNode.js:\r\n```\r\nnpm install --save fi-is\r\n```\r\n\r\nBower:\r\n```\r\nbower install --save fi-is\r\n```\r\n\r\n####Contributing:\r\nThanks for considering to contribute. Check [here](CONTRIBUTING.md)\r\n\r\nBuild:\r\n```\r\nglulp build\r\n```\r\n\r\nTest:\r\n```\r\nnpm test\r\n```\r\n\r\n####Contributors:\r\nMany thanks to the original project [contributors](https://github.com/arasatasaygin/is.js/graphs/contributors).\r\n\r\nType checks\r\n===========\r\n\r\nis.arguments(value:any)\r\n-----------------------\r\n####Checks if the given value type is arguments.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar getArguments = function() {\r\n    return arguments;\r\n};\r\n\r\nvar arguments = getArguments();\r\n\r\nis.arguments(arguments);\r\n=> true\r\n\r\nis.not.arguments({foo: 'bar'});\r\n=> true\r\n\r\nis.all.arguments(arguments, 'bar');\r\n=> false\r\n\r\nis.any.arguments(['foo'], arguments);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.arguments([arguments, 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.array(value:any)\r\n-------------------\r\n####Checks if the given value type is array.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.array(['foo', 'bar', 'baz']);\r\n=> true\r\n\r\nis.not.array({foo: 'bar'});\r\n=> true\r\n\r\nis.all.array(['foo'], 'bar');\r\n=> false\r\n\r\nis.any.array(['foo'], 'bar');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.array([[1, 2], 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.boolean(value:any)\r\n---------------------\r\n####Checks if the given value type is boolean.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.boolean(true);\r\n=> true\r\n\r\nis.not.boolean({foo: 'bar'});\r\n=> true\r\n\r\nis.all.boolean(true, 'bar');\r\n=> false\r\n\r\nis.any.boolean(true, 'bar');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.boolean([true, 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.date(value:any)\r\n------------------\r\n####Checks if the given value type is date.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.date(new Date());\r\n=> true\r\n\r\nis.not.date({foo: 'bar'});\r\n=> true\r\n\r\nis.all.date(new Date(), 'bar');\r\n=> false\r\n\r\nis.any.date(new Date(), 'bar');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.date([new Date(), 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.error(value:any)\r\n-------------------\r\n####Checks if the given value type is error.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.error(new Error());\r\n=> true\r\n\r\nis.not.error({foo: 'bar'});\r\n=> true\r\n\r\nis.all.error(new Error(), 'bar');\r\n=> false\r\n\r\nis.any.error(new Error(), 'bar');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.error([new Error(), 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.function(value:any)\r\n----------------------\r\n####Checks if the given value type is function.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.function(toString);\r\n=> true\r\n\r\nis.not.function({foo: 'bar'});\r\n=> true\r\n\r\nis.all.function(toString, 'bar');\r\n=> false\r\n\r\nis.any.function(toString, 'bar');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.function([toString, 'foo', 'bar']);\r\n=> false\r\n```\r\n\r\nis.nan(value:any)\r\n-----------------\r\n####Checks if the given value type is NaN.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.nan(NaN);\r\n=> true\r\n\r\nis.not.nan(42);\r\n=> true\r\n\r\nis.all.nan(NaN, 1);\r\n=> false\r\n\r\nis.any.nan(NaN, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.nan([NaN, 'foo', 1]);\r\n=> false\r\n```\r\n\r\nis.null(value:any)\r\n------------------\r\n####Checks if the given value type is null.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.null(null);\r\n=> true\r\n\r\nis.not.null(42);\r\n=> true\r\n\r\nis.all.null(null, 1);\r\n=> false\r\n\r\nis.any.null(null, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.null([null, 'foo', 1]);\r\n=> false\r\n```\r\n\r\nis.number(value:any)\r\n--------------------\r\n####Checks if the given value type is number.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.number(42);\r\n=> true\r\n\r\nis.number(NaN);\r\n=> false\r\n\r\nis.not.number('42');\r\n=> true\r\n\r\nis.all.number('foo', 1);\r\n=> false\r\n\r\nis.any.number({}, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.number([42, 'foo', 1]);\r\n=> false\r\n```\r\n\r\nis.object(value:any)\r\n--------------------\r\n####Checks if the given value type is object.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.object({foo: 'bar'});\r\n=> true\r\n\r\n// functions are also returning as true\r\nis.object(toString);\r\n=> true\r\n\r\nis.not.object('foo');\r\n=> true\r\n\r\nis.all.object({}, 1);\r\n=> false\r\n\r\nis.any.object({}, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.object([{}, new Object()]);\r\n=> true\r\n```\r\n\r\nis.json(value:any)\r\n--------------------\r\n####Checks if the given value type is pure json object.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.json({foo: 'bar'});\r\n=> true\r\n\r\n// functions are returning as false\r\nis.json(toString);\r\n=> false\r\n\r\nis.not.json([]);\r\n=> true\r\n\r\nis.all.json({}, 1);\r\n=> false\r\n\r\nis.any.json({}, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.json([{}, {foo: 'bar'}]);\r\n=> true\r\n```\r\n\r\nis.regexp(value:any)\r\n--------------------\r\n####Checks if the given value type is RegExp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.regexp(/test/);\r\n=> true\r\n\r\nis.not.regexp(['foo']);\r\n=> true\r\n\r\nis.all.regexp(/test/, 1);\r\n=> false\r\n\r\nis.any.regexp(new RegExp('ab+c'), 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.regexp([{}, /test/]);\r\n=> false\r\n```\r\n\r\nis.string(value:any)\r\n--------------------\r\n####Checks if the given value type is string.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.string('foo');\r\n=> true\r\n\r\nis.not.string(['foo']);\r\n=> true\r\n\r\nis.all.string('foo', 1);\r\n=> false\r\n\r\nis.any.string('foo', 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.string([{}, 'foo']);\r\n=> false\r\n```\r\n\r\nis.char(value:any)\r\n--------------------\r\n####Checks if the given value type is char.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.char('f');\r\n=> true\r\n\r\nis.not.char(['foo']);\r\n=> true\r\n\r\nis.all.char('f', 1);\r\n=> false\r\n\r\nis.any.char('f', 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.char(['f', 'o', 'o']);\r\n=> true\r\n```\r\n\r\nis.undefined(value:any)\r\n-----------------------\r\n####Checks if the given value type is undefined.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.undefined(undefined);\r\n=> true\r\n\r\nis.not.undefined(null);\r\n=> true\r\n\r\nis.all.undefined(undefined, 1);\r\n=> false\r\n\r\nis.any.undefined(undefined, 2);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.undefined([{}, undefined]);\r\n=> false\r\n```\r\n\r\nis.sameType(value:any, value:any)\r\n---------------------------------\r\n####Checks if the given value types are same type.\r\ninterface: not\r\n\r\n```javascript\r\nis.sameType(42, 7);\r\n=> true\r\n\r\nis.sameType(42, '7');\r\n=> false\r\n\r\nis.not.sameType(42, 7);\r\n=> false\r\n```\r\n\r\nPresence checks\r\n===============\r\n\r\nis.empty(value:object|array|string)\r\n-----------------------------------\r\n####Checks if the given value is empty.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.empty({});\r\n=> true\r\n\r\nis.empty([]);\r\n=> true\r\n\r\nis.empty('');\r\n=> true\r\n\r\nis.not.empty(['foo']);\r\n=> true\r\n\r\nis.all.empty('', {}, ['foo']);\r\n=> false\r\n\r\nis.any.empty([], 42);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.empty([{}, 'foo']);\r\n=> false\r\n```\r\n\r\nis.existy(value:any)\r\n--------------------\r\n####Checks if the given value is existy. (not null or undefined)\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.existy({});\r\n=> true\r\n\r\nis.existy(null);\r\n=> false\r\n\r\nis.not.existy(undefined);\r\n=> true\r\n\r\nis.all.existy(null, ['foo']);\r\n=> false\r\n\r\nis.any.existy(undefined, 42);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.existy([{}, 'foo']);\r\n=> true\r\n```\r\n\r\nis.truthy(value:any)\r\n--------------------\r\n####Checks if the given value is truthy. (existy and not false)\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.truthy(true);\r\n=> true\r\n\r\nis.truthy(null);\r\n=> false\r\n\r\nis.not.truthy(false);\r\n=> true\r\n\r\nis.all.truthy(null, true);\r\n=> false\r\n\r\nis.any.truthy(undefined, true);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.truthy([{}, true]);\r\n=> true\r\n```\r\n\r\nis.falsy(value:any)\r\n-------------------\r\n####Checks if the given value is falsy.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.falsy(false);\r\n=> true\r\n\r\nis.falsy(null);\r\n=> true\r\n\r\nis.not.falsy(true);\r\n=> true\r\n\r\nis.all.falsy(null, false);\r\n=> true\r\n\r\nis.any.falsy(undefined, true);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.falsy([false, true, undefined]);\r\n=> false\r\n```\r\n\r\nis.space(value:string)\r\n----------------------\r\n####Checks if the given value is space.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.space(' ');\r\n=> true\r\n\r\nis.space('foo');\r\n=> false\r\n\r\nis.not.space(true);\r\n=> true\r\n\r\nis.all.space(' ', 'foo');\r\n=> false\r\n\r\nis.any.space(' ', true);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.space([' ', 'foo', undefined]);\r\n=> false\r\n```\r\n\r\nRegExp checks\r\n=============\r\n\r\nis.url(value:any)\r\n-----------------\r\n####Checks if the given value matches url regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.url('http://www.test.com');\r\n=> true\r\n\r\nis.url('foo');\r\n=> false\r\n\r\nis.not.url(true);\r\n=> true\r\n\r\nis.all.url('http://www.test.com', 'foo');\r\n=> false\r\n\r\nis.any.url('http://www.test.com', true);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.url(['http://www.test.com', 'foo', undefined]);\r\n=> false\r\n```\r\n\r\nis.email(value:any)\r\n-------------------\r\n####Checks if the given value matches email regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.email('test@test.com');\r\n=> true\r\n\r\nis.email('foo');\r\n=> false\r\n\r\nis.not.email('foo');\r\n=> true\r\n\r\nis.all.email('test@test.com', 'foo');\r\n=> false\r\n\r\nis.any.email('test@test.com', 'foo');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.email(['test@test.com', 'foo', undefined]);\r\n=> false\r\n```\r\n\r\nis.creditCard(value:any)\r\n------------------------\r\n####Checks if the given value matches credit card regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.creditCard(378282246310005);\r\n=> true\r\n\r\nis.creditCard(123);\r\n=> false\r\n\r\nis.not.creditCard(123);\r\n=> true\r\n\r\nis.all.creditCard(378282246310005, 123);\r\n=> false\r\n\r\nis.any.creditCard(378282246310005, 123);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.creditCard([378282246310005, 123, undefined]);\r\n=> false\r\n```\r\n\r\nis.alphaNumeric(value:any)\r\n--------------------------\r\n####Checks if the given value matches alpha numeric regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.alphaNumeric('alphaNu3er1k');\r\n=> true\r\n\r\nis.alphaNumeric('*?');\r\n=> false\r\n\r\nis.not.alphaNumeric('*?');\r\n=> true\r\n\r\nis.all.alphaNumeric('alphaNu3er1k', '*?');\r\n=> false\r\n\r\nis.any.alphaNumeric('alphaNu3er1k', '*?');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.alphaNumeric(['alphaNu3er1k', '*?']);\r\n=> false\r\n```\r\n\r\nis.timeString(value:any)\r\n------------------------\r\n####Checks if the given value matches time string regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.timeString('13:45:30');\r\n=> true\r\n\r\nis.timeString('90:90:90');\r\n=> false\r\n\r\nis.not.timeString('90:90:90');\r\n=> true\r\n\r\nis.all.timeString('13:45:30', '90:90:90');\r\n=> false\r\n\r\nis.any.timeString('13:45:30', '90:90:90');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.timeString(['13:45:30', '90:90:90']);\r\n=> false\r\n```\r\n\r\nis.dateString(value:any)\r\n------------------------\r\n####Checks if the given value matches date string regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.dateString('11/11/2011');\r\n=> true\r\n\r\nis.dateString('90/11/2011');\r\n=> false\r\n\r\nis.not.dateString('90/11/2011');\r\n=> true\r\n\r\nis.all.dateString('11/11/2011', '90/11/2011');\r\n=> false\r\n\r\nis.any.dateString('11/11/2011', '90/11/2011');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.dateString(['11/11/2011', '90/11/2011']);\r\n=> false\r\n```\r\n\r\nis.usZipCode(value:any)\r\n-----------------------\r\n####Checks if the given value matches US zip code regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.usZipCode('02201-1020');\r\n=> true\r\n\r\nis.usZipCode('123');\r\n=> false\r\n\r\nis.not.usZipCode('123');\r\n=> true\r\n\r\nis.all.usZipCode('02201-1020', '123');\r\n=> false\r\n\r\nis.any.usZipCode('02201-1020', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.usZipCode(['02201-1020', '123']);\r\n=> false\r\n```\r\n\r\nis.caPostalCode(value:any)\r\n--------------------------\r\n####Checks if the given value matches Canada postal code regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.caPostalCode('L8V3Y1');\r\n=> true\r\n\r\nis.caPostalCode('L8V 3Y1');\r\n=> true\r\n\r\nis.caPostalCode('123');\r\n=> false\r\n\r\nis.not.caPostalCode('123');\r\n=> true\r\n\r\nis.all.caPostalCode('L8V3Y1', '123');\r\n=> false\r\n\r\nis.any.caPostalCode('L8V3Y1', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.caPostalCode(['L8V3Y1', '123']);\r\n=> false\r\n```\r\n\r\nis.ukPostCode(value:any)\r\n------------------------\r\n####Checks if the given value matches UK post code regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.ukPostCode('B184BJ');\r\n=> true\r\n\r\nis.ukPostCode('123');\r\n=> false\r\n\r\nis.not.ukPostCode('123');\r\n=> true\r\n\r\nis.all.ukPostCode('B184BJ', '123');\r\n=> false\r\n\r\nis.any.ukPostCode('B184BJ', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.ukPostCode(['B184BJ', '123']);\r\n=> false\r\n```\r\n\r\nis.nanpPhone(value:any)\r\n-----------------------\r\n####Checks if the given value matches North American numbering plan phone regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.nanpPhone('609-555-0175');\r\n=> true\r\n\r\nis.nanpPhone('123');\r\n=> false\r\n\r\nis.not.nanpPhone('123');\r\n=> true\r\n\r\nis.all.nanpPhone('609-555-0175', '123');\r\n=> false\r\n\r\nis.any.nanpPhone('609-555-0175', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.nanpPhone(['609-555-0175', '123']);\r\n=> false\r\n```\r\n\r\nis.eppPhone(value:any)\r\n----------------------\r\n####Checks if the given value matches extensible provisioning protocol phone regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.eppPhone('+90.2322456789');\r\n=> true\r\n\r\nis.eppPhone('123');\r\n=> false\r\n\r\nis.not.eppPhone('123');\r\n=> true\r\n\r\nis.all.eppPhone('+90.2322456789', '123');\r\n=> false\r\n\r\nis.any.eppPhone('+90.2322456789', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.eppPhone(['+90.2322456789', '123']);\r\n=> false\r\n```\r\n\r\nis.socialSecurityNumber(value:any)\r\n----------------------------------\r\n####Checks if the given value matches social security number regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.socialSecurityNumber('017-90-7890');\r\n=> true\r\n\r\nis.socialSecurityNumber('123');\r\n=> false\r\n\r\nis.not.socialSecurityNumber('123');\r\n=> true\r\n\r\nis.all.socialSecurityNumber('017-90-7890', '123');\r\n=> false\r\n\r\nis.any.socialSecurityNumber('017-90-7890', '123');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.socialSecurityNumber(['017-90-7890', '123']);\r\n=> false\r\n```\r\n\r\nis.affirmative(value:any)\r\n-------------------------\r\n####Checks if the given value matches affirmative regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.affirmative('yes');\r\n=> true\r\n\r\nis.affirmative('no');\r\n=> false\r\n\r\nis.not.affirmative('no');\r\n=> true\r\n\r\nis.all.affirmative('yes', 'no');\r\n=> false\r\n\r\nis.any.affirmative('yes', 'no');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.affirmative(['yes', 'y', 'true', 't', 'ok', 'okay']);\r\n=> true\r\n```\r\n\r\nis.hexadecimal(value:any)\r\n-------------------------\r\n####Checks if the given value matches hexadecimal regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.hexadecimal('f0f0f0');\r\n=> true\r\n\r\nis.hexadecimal(2.5);\r\n=> false\r\n\r\nis.not.hexadecimal('string');\r\n=> true\r\n\r\nis.all.hexadecimal('ff', 'f50');\r\n=> true\r\n\r\nis.any.hexadecimal('ff5500', true);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.hexadecimal(['fff', '333', 'f50']);\r\n=> true\r\n```\r\n\r\nis.hexColor(value:any)\r\n-------------------------\r\n####Checks if the given value matches hexcolor regexp.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.hexColor('#333');\r\n=> true\r\n\r\nis.hexColor('#3333');\r\n=> false\r\n\r\nis.not.hexColor(0.5);\r\n=> true\r\n\r\nis.all.hexColor('fff', 'f50');\r\n=> true\r\n\r\nis.any.hexColor('ff5500', 0.5);\r\n=> false\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.hexColor(['fff', '333', 'f50']);\r\n=> true\r\n```\r\n\r\nis.ip(value:string)\r\n-------------------------\r\n####Checks if the given value matches ip regexp\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.ip('198.156.23.5');\r\n=> true\r\n\r\nis.ip('1.2..5');\r\n=> false\r\n\r\nis.not.ip('8:::::::7');\r\n=> true\r\n\r\nis.all.ip('0:1::4:ff5:54:987:C', '123.123.123.123');\r\n=> true\r\n\r\nis.any.ip('123.8.4.3', '0.0.0.0');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.ip(['123.123.23.12', 'A:B:C:D:E:F:0:0']);\r\n=> true\r\n```\r\n\r\nis.ipv4(value:string)\r\n-------------------------\r\n####Checks if the given value matches ipv4 regexp\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.ipv4('198.12.3.142');\r\n=> true\r\n\r\nis.ipv4('1.2..5');\r\n=> false\r\n\r\nis.not.ipv4('8:::::::7');\r\n=> true\r\n\r\nis.all.ipv4('198.12.3.142', '123.123.123.123');\r\n=> true\r\n\r\nis.any.ipv4('255.255.255.255', '850..1.4');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.ipv4(['198.12.3.142', '1.2.3']);\r\n=> false\r\n\r\n```\r\n\r\nis.ipv6(value:string)\r\n-------------------------\r\n####Checks if the given value matches ipv6 regexp\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.ipv6('2001:DB8:0:0:1::1');\r\n=> true\r\n\r\nis.ipv6('985.12.3.4');\r\n=> true\r\n\r\nis.not.ipv6('8:::::::7');\r\n=> true\r\n\r\nis.all.ipv6('2001:DB8:0:0:1::1', '1:50:198:2::1:2:8');\r\n=> true\r\n\r\nis.any.ipv6('255.255.255.255', '2001:DB8:0:0:1::1');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.ipv6(['2001:DB8:0:0:1::1', '1.2.3']);\r\n=> false\r\n```\r\n\r\nString checks\r\n=============\r\n\r\nis.include(value:string, value:substring)\r\n-----------------------------------------\r\n####Checks if the given string contains a substring.\r\ninterface: not\r\n\r\n```javascript\r\nis.include('Some text goes here', 'text');\r\n=> true\r\n\r\nis.include('test', 'text');\r\n=> false\r\n\r\nis.not.include('test', 'text');\r\n=> true\r\n```\r\n\r\nis.upperCase(value:string)\r\n--------------------------\r\n####Checks if the given string is UPPERCASE.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.upperCase('YEAP');\r\n=> true\r\n\r\nis.upperCase('nope');\r\n=> false\r\n\r\nis.not.upperCase('Nope');\r\n=> true\r\n\r\nis.all.upperCase('YEAP', 'nope');\r\n=> false\r\n\r\nis.any.upperCase('YEAP', 'nope');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.upperCase(['YEAP', 'ALL UPPERCASE']);\r\n=> true\r\n```\r\n\r\n\r\nis.lowerCase(value:string)\r\n--------------------------\r\n####Checks if the given string is lowercase.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.lowerCase('yeap');\r\n=> true\r\n\r\nis.lowerCase('NOPE');\r\n=> false\r\n\r\nis.not.lowerCase('Nope');\r\n=> true\r\n\r\nis.all.lowerCase('yeap', 'NOPE');\r\n=> false\r\n\r\nis.any.lowerCase('yeap', 'NOPE');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.lowerCase(['yeap', 'all lowercase']);\r\n=> true\r\n```\r\n\r\nis.startWith(value:string, value:substring)\r\n-------------------------------------------\r\n####Checks if the given string starts with substring.\r\ninterface: not\r\n\r\n```javascript\r\nis.startWith('yeap', 'ye');\r\n=> true\r\n\r\nis.startWith('nope', 'ye');\r\n=> false\r\n\r\nis.not.startWith('nope not that', 'not');\r\n=> true\r\n```\r\n\r\nis.endWith(value:string, value:substring)\r\n-----------------------------------------\r\n####Checks if the given string ends with substring.\r\ninterfaces: not\r\n\r\n```javascript\r\nis.endWith('yeap', 'ap');\r\n=> true\r\n\r\nis.endWith('nope', 'no');\r\n=> false\r\n\r\nis.not.endWith('nope not that', 'not');\r\n=> true\r\n\r\nis.endWith('yeap that one', 'one');\r\n=> true\r\n```\r\n\r\nis.capitalized(value:string, value:substring)\r\n---------------------------------------------\r\n####Checks if the given string is capitalized.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.capitalized('Yeap');\r\n=> true\r\n\r\nis.capitalized('nope');\r\n=> false\r\n\r\nis.not.capitalized('nope not capitalized');\r\n=> true\r\n\r\nis.not.capitalized('nope Capitalized');\r\n=> true\r\n\r\nis.all.capitalized('Yeap', 'All', 'Capitalized');\r\n=> true\r\n\r\nis.any.capitalized('Yeap', 'some', 'Capitalized');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.capitalized(['Nope', 'not']);\r\n=> false\r\n```\r\n\r\nis.palindrome(value:string, value:substring)\r\n---------------------------------------------\r\n####Checks if the given string is palindrome.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.palindrome('testset');\r\n=> true\r\n\r\nis.palindrome('nope');\r\n=> false\r\n\r\nis.not.palindrome('nope not palindrome');\r\n=> true\r\n\r\nis.not.palindrome('tt');\r\n=> false\r\n\r\nis.all.palindrome('testset', 'tt');\r\n=> true\r\n\r\nis.any.palindrome('Yeap', 'some', 'testset');\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.palindrome(['Nope', 'testset']);\r\n=> false\r\n```\r\n\r\nArithmetic checks\r\n=================\r\n\r\nis.equal(value:any, value:any)\r\n------------------------------\r\n####Checks if the given values are equal.\r\ninterfaces: not\r\n\r\n```javascript\r\nis.equal(42, 40 + 2);\r\n=> true\r\n\r\nis.equal('yeap', 'yeap');\r\n=> true\r\n\r\nis.equal(true, true);\r\n=> true\r\n\r\nis.not.equal('yeap', 'nope');\r\n=> true\r\n```\r\n\r\nis.even(value:number)\r\n---------------------\r\n####Checks if the given value is even.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.even(42);\r\n=> true\r\n\r\nis.not.even(41);\r\n=> true\r\n\r\nis.all.even(40, 42, 44);\r\n=> true\r\n\r\nis.any.even(39, 42, 43);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.even([40, 42, 43]);\r\n=> false\r\n```\r\n\r\nis.odd(value:number)\r\n--------------------\r\n####Checks if the given value is odd.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.odd(41);\r\n=> true\r\n\r\nis.not.odd(42);\r\n=> true\r\n\r\nis.all.odd(39, 41, 43);\r\n=> true\r\n\r\nis.any.odd(39, 42, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.odd([40, 42, 43]);\r\n=> false\r\n```\r\n\r\nis.positive(value:number)\r\n-------------------------\r\n####Checks if the given value is positive.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.positive(41);\r\n=> true\r\n\r\nis.not.positive(-42);\r\n=> true\r\n\r\nis.all.positive(39, 41, 43);\r\n=> true\r\n\r\nis.any.positive(-39, 42, -44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.positive([40, 42, -43]);\r\n=> false\r\n```\r\n\r\nis.negative(value:number)\r\n-------------------------\r\n####Checks if the given value is negative.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.negative(-41);\r\n=> true\r\n\r\nis.not.negative(42);\r\n=> true\r\n\r\nis.all.negative(-39, -41, -43);\r\n=> true\r\n\r\nis.any.negative(-39, 42, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.negative([40, 42, -43]);\r\n=> false\r\n```\r\n\r\nis.above(value:number, min)\r\n---------------------------\r\n####Checks if the given value is above minimum value.\r\ninterface: not\r\n\r\n```javascript\r\nis.above(41, 30);\r\n=> true\r\n\r\nis.not.above(42, 50);\r\n=> true\r\n```\r\n\r\nis.under(value:number, min)\r\n---------------------------\r\n####Checks if the given value is under maximum value.\r\ninterface: not\r\n\r\n```javascript\r\nis.under(30, 35);\r\n=> true\r\n\r\nis.not.under(42, 30);\r\n=> true\r\n```\r\n\r\nis.within(value:number, min, max)\r\n---------------------------------\r\n####Checks if the given value is within minimum and maximum values.\r\ninterface: not\r\n\r\n```javascript\r\nis.within(30, 20, 40);\r\n=> true\r\n\r\nis.not.within(40, 30, 35);\r\n=> true\r\n```\r\n\r\nis.decimal(value:number)\r\n------------------------\r\n####Checks if the given value is decimal.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.decimal(41.5);\r\n=> true\r\n\r\nis.not.decimal(42);\r\n=> true\r\n\r\nis.all.decimal(39.5, 41.5, -43.5);\r\n=> true\r\n\r\nis.any.decimal(-39, 42.5, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.decimal([40, 42.5, -43]);\r\n=> false\r\n```\r\n\r\nis.integer(value:number)\r\n------------------------\r\n####Checks if the given value is integer.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.integer(41);\r\n=> true\r\n\r\nis.not.integer(42.5);\r\n=> true\r\n\r\nis.all.integer(39, 41, -43);\r\n=> true\r\n\r\nis.any.integer(-39, 42.5, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.integer([40, 42.5, -43]);\r\n=> false\r\n```\r\n\r\nis.finite(value:number)\r\n-----------------------\r\n####Checks if the given value is finite.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.finite(41);\r\n=> true\r\n\r\nis.not.finite(42 / 0);\r\n=> true\r\n\r\nis.all.finite(39, 41, -43);\r\n=> true\r\n\r\nis.any.finite(-39, Infinity, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.finite([Infinity, -Infinity, 42.5]);\r\n=> false\r\n```\r\n\r\nis.infinite(value:number)\r\n-------------------------\r\n####Checks if the given value is infinite.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.infinite(Infinity);\r\n=> true\r\n\r\nis.not.infinite(42);\r\n=> true\r\n\r\nis.all.infinite(Infinity, -Infinity, -43 / 0);\r\n=> true\r\n\r\nis.any.infinite(-39, Infinity, 44);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.infinite([Infinity, -Infinity, 42.5]);\r\n=> false\r\n```\r\n\r\nObject checks\r\n=============\r\n\r\nis.propertyCount(value:object, count)\r\n-------------------------------------\r\n####Checks if objects' property count is equal to given count.\r\ninterface: not\r\n\r\n```javascript\r\nis.propertyCount({this: 'is', 'sample': object}, 2);\r\n=> true\r\n\r\nis.propertyCount({this: 'is', 'sample': object}, 3);\r\n=> false\r\n\r\nis.not.propertyCount({}, 2);\r\n=> true\r\n```\r\n\r\nis.propertyDefined(value:object, property)\r\n------------------------------------------\r\n####Checks if the given property is defined on object.\r\ninterface: not\r\n\r\n```javascript\r\nis.propertyDefined({yeap: 'yeap'}, 'yeap');\r\n=> true\r\n\r\nis.propertyDefined({yeap: 'yeap'}, 'nope');\r\n=> false\r\n\r\nis.not.propertyDefined({}, 'nope');\r\n=> true\r\n```\r\n\r\nis.windowObject(value:window)\r\n-----------------------------\r\n####Checks if the given object is window object.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.windowObject(window);\r\n=> true\r\n\r\nis.windowObject({nope: 'nope'});\r\n=> false\r\n\r\nis.not.windowObject({});\r\n=> true\r\n\r\nis.all.windowObject(window, {nope: 'nope'});\r\n=> false\r\n\r\nis.any.windowObject(window, {nope: 'nope'});\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.windowObject([window, {nope: 'nope'}]);\r\n=> false\r\n```\r\n\r\nis.domNode(value:object)\r\n-----------------------------\r\n####Checks if the given object is a dom node.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar obj = document.createElement('div');\r\nis.domNode(obj);\r\n=> true\r\n\r\nis.domNode({nope: 'nope'});\r\n=> false\r\n\r\nis.not.domNode({});\r\n=> true\r\n\r\nis.all.domNode(obj, obj);\r\n=> true\r\n\r\nis.any.domNode(obj, {nope: 'nope'});\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.domNode([obj, {nope: 'nope'}]);\r\n=> false\r\n```\r\n\r\nArray checks\r\n============\r\n\r\nis.inArray(value:any, array)\r\n---------------------\r\n####Checks if the given item is in array?\r\ninterface: not\r\n```javascript\r\nis.inArray(2, [1, 2, 3]);\r\n=> true\r\n\r\nis.inArray(4, [1, 2, 3]);\r\n=> false\r\n\r\nis.not.inArray(4, [1, 2, 3]);\r\n=> true\r\n```\r\n\r\nis.sorted(value:array)\r\n----------------------\r\n####Checks if the given array is sorted.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.sorted([1, 2, 3]);\r\n=> true\r\n\r\nis.sorted([1, 2, 4, 3]);\r\n=> false\r\n\r\nis.not.sorted([5, 4, 3]);\r\n=> true\r\n\r\nis.all.sorted([1, 2], [3, 4]);\r\n=> true\r\n\r\nis.any.sorted([1, 2], [5, 4]);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.sorted([[1, 2], [5, 4]]);\r\n=> false\r\n```\r\n\r\nEnvironment checks\r\n==================\r\n####Environment checks are not available as node module.\r\n\r\nis.ie(value:number)\r\n-------------------\r\n####Checks if current browser is ie. Parameter is optional version number of browser.\r\ninterface: not\r\n\r\n```javascript\r\nis.ie();\r\n=> true if current browser is ie\r\n\r\nis.ie(6);\r\n=> hopefully false\r\n\r\nis.not.ie();\r\n=> false if current browser is ie\r\n```\r\n\r\nis.chrome()\r\n-----------\r\n####Checks if current browser is chrome.\r\ninterface: not\r\n\r\n```javascript\r\nis.chrome();\r\n=> true if current browser is chrome\r\n\r\nis.not.chrome();\r\n=> false if current browser is chrome\r\n```\r\n\r\nis.firefox()\r\n------------\r\n####Checks if current browser is firefox.\r\ninterface: not\r\n\r\n```javascript\r\nis.firefox();\r\n=> true if current browser is firefox\r\n\r\nis.not.firefox();\r\n=> false if current browser is firefox\r\n```\r\n\r\nis.edge()\r\n------------\r\n####Checks if current browser is edge.\r\ninterface: not\r\n\r\n```javascript\r\nis.edge();\r\n=> true if current browser is edge\r\n\r\nis.not.edge();\r\n=> false if current browser is edge\r\n```\r\n\r\nis.opera()\r\n----------\r\n####Checks if current browser is opera.\r\ninterface: not\r\n\r\n```javascript\r\nis.opera();\r\n=> true if current browser is opera\r\n\r\nis.not.opera();\r\n=> false if current browser is opera\r\n```\r\n\r\nis.safari()\r\n-----------\r\n####Checks if current browser is safari.\r\ninterface: not\r\n\r\n```javascript\r\nis.safari();\r\n=> true if current browser is safari\r\n\r\nis.not.safari();\r\n=> false if current browser is safari\r\n```\r\n\r\nis.ios()\r\n--------\r\n####Checks if current device has ios.\r\ninterface: not\r\n\r\n```javascript\r\nis.ios();\r\n=> true if current device is iPhone, iPad or iPod\r\n\r\nis.not.ios();\r\n=> true if current device is not iPhone, iPad or iPod\r\n```\r\n\r\nis.iphone()\r\n-----------\r\n####Checks if current device is iPhone.\r\ninterface: not\r\n\r\n```javascript\r\nis.iphone();\r\n=> true if current device is iPhone\r\n\r\nis.not.iphone();\r\n=> true if current device is not iPhone\r\n```\r\n\r\nis.ipad()\r\n---------\r\n####Checks if current device is iPad.\r\ninterface: not\r\n\r\n```javascript\r\nis.ipad();\r\n=> true if current device is iPad\r\n\r\nis.not.ipad();\r\n=> true if current device is not iPad\r\n```\r\n\r\nis.ipod()\r\n---------\r\n####Checks if current device is iPod.\r\ninterface: not\r\n\r\n```javascript\r\nis.ipod();\r\n=> true if current device is iPod\r\n\r\nis.not.ipod();\r\n=> true if current device is not iPod\r\n```\r\n\r\nis.android()\r\n------------\r\n####Checks if current device has Android.\r\ninterface: not\r\n\r\n```javascript\r\nis.android();\r\n=> true if current device has Android OS\r\n\r\nis.not.android();\r\n=> true if current device has not Android OS\r\n```\r\n\r\nis.androidPhone()\r\n-----------------\r\n####Checks if current device is Android phone.\r\ninterface: not\r\n\r\n```javascript\r\nis.androidPhone();\r\n=> true if current device is Android phone\r\n\r\nis.not.androidPhone();\r\n=> true if current device is not Android phone\r\n```\r\n\r\nis.androidTablet()\r\n------------------\r\n####Checks if current device is Android tablet.\r\ninterface: not\r\n\r\n```javascript\r\nis.androidTablet();\r\n=> true if current device is Android tablet\r\n\r\nis.not.androidTablet();\r\n=> true if current device is not Android tablet\r\n```\r\n\r\nis.blackberry()\r\n---------------\r\n####Checks if current device is Blackberry.\r\ninterface: not\r\n\r\n```javascript\r\nis.blackberry();\r\n=> true if current device is Blackberry\r\n\r\nis.not.blackberry();\r\n=> true if current device is not Blackberry\r\n```\r\n\r\nis.windowsPhone()\r\n-----------------\r\n####Checks if current device is Windows phone.\r\ninterface: not\r\n\r\n```javascript\r\nis.windowsPhone();\r\n=> true if current device is Windows phone\r\n\r\nis.not.windowsPhone();\r\n=> true if current device is not Windows Phone\r\n```\r\n\r\nis.windowsTablet()\r\n------------------\r\n####Checks if current device is Windows tablet.\r\ninterface: not\r\n\r\n```javascript\r\nis.windowsTablet();\r\n=> true if current device is Windows tablet\r\n\r\nis.not.windowsTablet();\r\n=> true if current device is not Windows tablet\r\n```\r\n\r\nis.windows()\r\n------------\r\n####Checks if current OS is Windows.\r\ninterface: not\r\n\r\n```javascript\r\nis.windows();\r\n=> true if current OS is Windows\r\n\r\nis.not.windows();\r\n=> true if current OS is not Windows\r\n```\r\n\r\nis.mac()\r\n--------\r\n####Checks if current OS is Mac OS X.\r\ninterface: not\r\n\r\n```javascript\r\nis.mac();\r\n=> true if current OS is Mac OS X\r\n\r\nis.not.mac();\r\n=> true if current OS is not Mac OS X\r\n```\r\n\r\nis.linux()\r\n----------\r\n####Checks if current OS is linux.\r\ninterface: not\r\n\r\n```javascript\r\nis.linux();\r\n=> true if current OS is linux\r\n\r\nis.not.linux();\r\n=> true if current OS is not linux\r\n```\r\n\r\nis.desktop()\r\n------------\r\n####Checks if current device is desktop.\r\ninterface: not\r\n\r\n```javascript\r\nis.desktop();\r\n=> true if current device is desktop\r\n\r\nis.not.desktop();\r\n=> true if current device is not desktop\r\n```\r\n\r\nis.mobile()\r\n-----------\r\n####Checks if current device is mobile.\r\ninterface: not\r\niPhone, iPod, Android Phone, Windows Phone, Blackberry.\r\n```javascript\r\n\r\nis.mobile();\r\n=> true if current device is mobile\r\n\r\nis.not.mobile();\r\n=> true if current device is not mobile\r\n```\r\n\r\nis.tablet()\r\n-----------\r\n####Checks if current device is tablet.\r\ninterface: not\r\niPad, Android Tablet, Windows Tablet\r\n```javascript\r\n\r\nis.tablet();\r\n=> true if current device is tablet\r\n\r\nis.not.tablet();\r\n=> true if current device is not tablet\r\n```\r\n\r\nis.online()\r\n-----------\r\n####Checks if current device is online.\r\ninterface: not\r\n\r\n```javascript\r\nis.online();\r\n=> true if current device is online\r\n\r\nis.not.online();\r\n=> true if current device is not online\r\n```\r\n\r\nis.offline()\r\n------------\r\n####Checks if current device is offline.\r\ninterface: not\r\n\r\n```javascript\r\nis.offline();\r\n=> true if current device is offline\r\n\r\nis.not.offline();\r\n=> true if current device is not offline\r\n```\r\n\r\nis.touchDevice()\r\n------------\r\n####Checks if current device supports touch.\r\ninterface: not\r\n\r\n```javascript\r\nis.touchDevice();\r\n=> true if current device supports touch\r\n\r\nis.not.touchDevice();\r\n=> true if current device doesn't support touch\r\n```\r\n\r\nTime checks\r\n===========\r\n\r\nis.today(value:object)\r\n----------------------\r\n####Checks if the given date object indicate today.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar today = new Date();\r\nis.today(today);\r\n=> true\r\n\r\nvar yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\nis.today(yesterday);\r\n=> false\r\n\r\nis.not.today(yesterday);\r\n=> true\r\n\r\nis.all.today(today, today);\r\n=> true\r\n\r\nis.any.today(today, yesterday);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.today([today, yesterday]);\r\n=> false\r\n```\r\n\r\nis.yesterday(value:object)\r\n--------------------------\r\n####Checks if the given date object indicate yesterday.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar today = new Date();\r\nis.yesterday(today);\r\n=> false\r\n\r\nvar yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\nis.yesterday(yesterday);\r\n=> true\r\n\r\nis.not.yesterday(today);\r\n=> true\r\n\r\nis.all.yesterday(yesterday, today);\r\n=> false\r\n\r\nis.any.yesterday(today, yesterday);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.yesterday([today, yesterday]);\r\n=> false\r\n```\r\n\r\nis.tomorrow(value:object)\r\n-------------------------\r\n####Checks if the given date object indicate tomorrow.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar today = new Date();\r\nis.tomorrow(today);\r\n=> false\r\n\r\nvar tomorrow = new Date(new Date().setDate(new Date().getDate() + 1));\r\nis.tomorrow(tomorrow);\r\n=> true\r\n\r\nis.not.tomorrow(today);\r\n=> true\r\n\r\nis.all.tomorrow(tomorrow, today);\r\n=> false\r\n\r\nis.any.tomorrow(today, tomorrow);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.tomorrow([today, tomorrow]);\r\n=> false\r\n```\r\n\r\nis.past(value:object)\r\n---------------------\r\n####Checks if the given date object indicate past.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\nvar tomorrow = new Date(new Date().setDate(new Date().getDate() + 1));\r\n\r\nis.past(yesterday);\r\n=> true\r\n\r\nis.past(tomorrow);\r\n=> false\r\n\r\nis.not.past(tomorrow);\r\n=> true\r\n\r\nis.all.past(tomorrow, yesterday);\r\n=> false\r\n\r\nis.any.past(yesterday, tomorrow);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.past([yesterday, tomorrow]);\r\n=> false\r\n```\r\n\r\nis.future(value:object)\r\n-----------------------\r\n####Checks if the given date object indicate future.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar yesterday = new Date(new Date().setDate(new Date().getDate() - 1));\r\nvar tomorrow = new Date(new Date().setDate(new Date().getDate() + 1));\r\n\r\nis.future(yesterday);\r\n=> false\r\n\r\nis.future(tomorrow);\r\n=> true\r\n\r\nis.not.future(yesterday);\r\n=> true\r\n\r\nis.all.future(tomorrow, yesterday);\r\n=> false\r\n\r\nis.any.future(yesterday, tomorrow);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.future([yesterday, tomorrow]);\r\n=> false\r\n```\r\n\r\nis.day(value:object, dayString)\r\n-------------------------------\r\n####Checks if the given date objects' day equal given dayString parameter.\r\ninterface: not\r\n\r\n```javascript\r\nvar mondayObj = new Date('01/26/2015');\r\nvar tuesdayObj = new Date('01/27/2015');\r\nis.day(mondayObj, 'monday');\r\n=> true\r\n\r\nis.day(mondayObj, 'tuesday');\r\n=> false\r\n\r\nis.not.day(mondayObj, 'tuesday');\r\n=> true\r\n```\r\n\r\nis.month(value:object, monthString)\r\n-----------------------------------\r\n####Checks if the given date objects' month equal given monthString parameter.\r\ninterface: not\r\n\r\n```javascript\r\nvar januaryObj = new Date('01/26/2015');\r\nvar februaryObj = new Date('02/26/2015');\r\nis.month(januaryObj, 'january');\r\n=> true\r\n\r\nis.month(februaryObj, 'january');\r\n=> false\r\n\r\nis.not.month(februaryObj, 'january');\r\n=> true\r\n```\r\n\r\nis.year(value:object, yearNumber)\r\n---------------------------------\r\n####Checks if the given date objects' year equal given yearNumber parameter.\r\ninterface: not\r\n\r\n```javascript\r\nvar year2015 = new Date('01/26/2015');\r\nvar year2016 = new Date('01/26/2016');\r\nis.year(year2015, 2015);\r\n=> true\r\n\r\nis.year(year2016, 2015);\r\n=> false\r\n\r\nis.not.year(year2016, 2015);\r\n=> true\r\n```\r\n\r\nis.leapYear(value:number)\r\n---------------------------------\r\n####Checks if the given year number is a leap year\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nis.leapYear(2016);\r\n=> true\r\n\r\nis.leapYear(2015);\r\n=> false\r\n\r\nis.not.leapYear(2015);\r\n=> true\r\n\r\nis.all.leapYear(2015, 2016);\r\n=> false\r\n\r\nis.any.leapYear(2015, 2016);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.leapYear([2016, 2080]);\r\n=> true\r\n```\r\n\r\nis.weekend(value:object)\r\n------------------------\r\n####Checks if the given date objects' day is weekend.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar monday = new Date('01/26/2015');\r\nvar sunday = new Date('01/25/2015');\r\nvar saturday = new Date('01/24/2015');\r\nis.weekend(sunday);\r\n=> true\r\n\r\nis.weekend(monday);\r\n=> false\r\n\r\nis.not.weekend(monday);\r\n=> true\r\n\r\nis.all.weekend(sunday, saturday);\r\n=> true\r\n\r\nis.any.weekend(sunday, saturday, monday);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.weekend([sunday, saturday, monday]);\r\n=> false\r\n```\r\n\r\nis.weekday(value:object)\r\n------------------------\r\n####Checks if the given date objects' day is weekday.\r\ninterfaces: not, all, any\r\n\r\n```javascript\r\nvar monday = new Date('01/26/2015');\r\nvar sunday = new Date('01/25/2015');\r\nvar saturday = new Date('01/24/2015');\r\nis.weekday(monday);\r\n=> true\r\n\r\nis.weekday(sunday);\r\n=> false\r\n\r\nis.not.weekday(sunday);\r\n=> true\r\n\r\nis.all.weekday(monday, saturday);\r\n=> false\r\n\r\nis.any.weekday(sunday, saturday, monday);\r\n=> true\r\n\r\n// 'all' and 'any' interfaces can also take array parameter\r\nis.all.weekday([sunday, saturday, monday]);\r\n=> false\r\n```\r\n\r\nis.inDateRange(value:object, startObject, endObject)\r\n----------------------------------------------------\r\n####Checks if date is within given range.\r\ninterface: not\r\n\r\n```javascript\r\nvar saturday = new Date('01/24/2015');\r\nvar sunday = new Date('01/25/2015');\r\nvar monday = new Date('01/26/2015');\r\nis.inDateRange(sunday, saturday, monday);\r\n=> true\r\n\r\nis.inDateRange(saturday, sunday, monday);\r\n=> false\r\n\r\nis.not.inDateRange(saturday, sunday, monday);\r\n=> true\r\n```\r\n\r\nis.inLastWeek(value:object)\r\n---------------------------\r\n####Checks if the given date is between now and 7 days ago.\r\ninterface: not\r\n\r\n```javascript\r\nvar twoDaysAgo = new Date(new Date().setDate(new Date().getDate() - 2));\r\nvar nineDaysAgo = new Date(new Date().setDate(new Date().getDate() - 9));\r\nis.inLastWeek(twoDaysAgo);\r\n=> true\r\n\r\nis.inLastWeek(nineDaysAgo);\r\n=> false\r\n\r\nis.not.inLastWeek(nineDaysAgo);\r\n=> true\r\n```\r\n\r\nis.inLastMonth(value:object)\r\n----------------------------\r\n####Checks if the given date is between now and a month ago.\r\ninterface: not\r\n\r\n```javascript\r\nvar tenDaysAgo = new Date(new Date().setDate(new Date().getDate() - 10));\r\nvar fortyDaysAgo = new Date(new Date().setDate(new Date().getDate() - 40));\r\nis.inLastMonth(tenDaysAgo);\r\n=> true\r\n\r\nis.inLastMonth(fortyDaysAgo);\r\n=> false\r\n\r\nis.not.inLastMonth(fortyDaysAgo);\r\n=> true\r\n```\r\n\r\nis.inLastYear(value:object)\r\n---------------------------\r\n####Checks if the given date is between now and a year ago.\r\ninterface: not\r\n\r\n```javascript\r\nvar twoMonthsAgo = new Date(new Date().setMonth(new Date().getMonth() - 2));\r\nvar thirteenMonthsAgo = new Date(new Date().setMonth(new Date().getMonth() - 13));\r\nis.inLastYear(twoMonthsAgo);\r\n=> true\r\n\r\nis.inLastYear(thirteenMonthsAgo);\r\n=> false\r\n\r\nis.not.inLastYear(thirteenMonthsAgo);\r\n=> true\r\n```\r\n\r\nis.inNextWeek(value:object)\r\n---------------------------\r\n####Checks if the given date is between now and 7 days later.\r\ninterface: not\r\n\r\n```javascript\r\nvar twoDaysLater = new Date(new Date().setDate(new Date().getDate() + 2));\r\nvar nineDaysLater = new Date(new Date().setDate(new Date().getDate() + 9));\r\nis.inNextWeek(twoDaysLater);\r\n=> true\r\n\r\nis.inNextWeek(nineDaysLater);\r\n=> false\r\n\r\nis.not.inNextWeek(nineDaysLater);\r\n=> true\r\n```\r\n\r\nis.inNextMonth(value:object)\r\n----------------------------\r\n####Checks if the given date is between now and a month later.\r\ninterface: not\r\n\r\n```javascript\r\nvar tenDaysLater = new Date(new Date().setDate(new Date().getDate() + 10));\r\nvar fortyDaysLater = new Date(new Date().setDate(new Date().getDate() + 40));\r\nis.inNextMonth(tenDaysLater);\r\n=> true\r\n\r\nis.inNextMonth(fortyDaysLater);\r\n=> false\r\n\r\nis.not.inNextMonth(fortyDaysLater);\r\n=> true\r\n```\r\n\r\nis.inNextYear(value:object)\r\n---------------------------\r\n####Checks if the given date is between now and a year later.\r\ninterface: not\r\n\r\n```javascript\r\nvar twoMonthsLater = new Date(new Date().setMonth(new Date().getMonth() + 2));\r\nvar thirteenMonthsLater = new Date(new Date().setMonth(new Date().getMonth() + 13));\r\nis.inNextYear(twoMonthsLater);\r\n=> true\r\n\r\nis.inNextYear(thirteenMonthsLater);\r\n=> false\r\n\r\nis.not.inNextYear(thirteenMonthsLater);\r\n=> true\r\n```\r\n\r\nis.quarterOfYear(value:object, quarterNumber)\r\n---------------------------------------------\r\n####Checks if the given date is in the parameter quarter.\r\ninterface: not\r\n\r\n```javascript\r\nvar firstQuarter = new Date('01/26/2015');\r\nvar secondQuarter = new Date('05/26/2015');\r\nis.quarterOfYear(firstQuarter, 1);\r\n=> true\r\n\r\nis.quarterOfYear(secondQuarter, 1);\r\n=> false\r\n\r\nis.not.quarterOfYear(secondQuarter, 1);\r\n=> true\r\n```\r\n\r\nis.dayLightSavingTime(value:object, quarterNumber)\r\n--------------------------------------------------\r\n####Checks if the given date is in daylight saving time.\r\ninterface: not\r\n\r\n```javascript\r\n// For Turkey Time Zone\r\nvar january1 = new Date('01/01/2015');\r\nvar june1 = new Date('06/01/2015');\r\n\r\nis.dayLightSavingTime(june1);\r\n=> true\r\n\r\nis.dayLightSavingTime(january1);\r\n=> false\r\n\r\nis.not.dayLightSavingTime(january1);\r\n=> true\r\n```\r\n\r\nConfiguration methods\r\n=====================\r\n\r\nis.setRegexp(value:RegExp, regexpString)\r\n----------------------------------------\r\nOverride RegExps if you think they suck.\r\n\r\n```javascript\r\nis.url('https://www.duckduckgo.com');\r\n=> true\r\n\r\nis.setRegexp(/quack/, 'url');\r\nis.url('quack');\r\n=> true\r\n```\r\n\r\nis.setNamespace()\r\n-----------------\r\nChange namespace of library to prevent name collisions.\r\n\r\n```javascript\r\nvar customName = is.setNamespace();\r\ncustomName.odd(3);\r\n=> true\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}